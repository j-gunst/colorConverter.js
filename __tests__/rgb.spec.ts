import { rgbToHex, rgbToHsl } from '../src/index'

describe('rgbToHex with invalid cases', () => {
  test.each`
    arg                            | expected
    ${null}                        | ${'#ffffff'}
    ${false}                       | ${'#ffffff'}
    ${undefined}                   | ${'#ffffff'}
    ${'string'}                    | ${'#ffffff'}
    ${''}                          | ${'#ffffff'}
    ${12345}                       | ${'#ffffff'}
    ${-12345}                      | ${'#ffffff'}
    ${Infinity}                    | ${'#ffffff'}
    ${-Infinity}                   | ${'#ffffff'}
    ${NaN}                         | ${'#ffffff'}
    ${{}}                          | ${'#ffffff'}
    ${[]}                          | ${'#ffffff'}
    ${'rgba(10, 20, 30, 1000%)'}   | ${'#ffffff'}
    ${'rgba(50%, 20%, 10%, 0.5%)'} | ${'#ffffff'}
  `(`With "$arg" returns "$expected"`, ({ arg, expected }) => expect(rgbToHex(arg)).toBe(expected))
})

describe('rgbToHex with valid cases', () => {
  test.each`
    arg                               | expected
    ${'rgb(50 40 30)'}                | ${'#32281e'}
    ${'rgb(50,40,30)'}                | ${'#32281e'}
    ${'rgb(50, 40, 30)'}              | ${'#32281e'}
    ${'rgb(50 , 40 , 30)'}            | ${'#32281e'}
    ${'rgb(50% 40% 30%)'}             | ${'#80664d'}
    ${'rgb(50%,40%,30%)'}             | ${'#80664d'}
    ${'rgb(50%, 40%, 30%)'}           | ${'#80664d'}
    ${'rgb(50% , 40% , 30%)'}         | ${'#80664d'}
    ${'rgba(50% 20% 10% 0.5)'}        | ${'#80331a80'}
    ${'rgba(50%,20%,10%,0.5)'}        | ${'#80331a80'}
    ${'rgba(50%, 20%, 10%, 0.5)'}     | ${'#80331a80'}
    ${'rgba(50% , 20% , 10% , 0.5)'}  | ${'#80331a80'}
    ${'rgba(50% 20% 10% 50%)'}        | ${'#80331a80'}
    ${'rgba(50%,20%,10%,50%)'}        | ${'#80331a80'}
    ${'rgba(50%, 20%, 10%, 50%)'}     | ${'#80331a80'}
    ${'rgba(50% , 20% , 10% , 50%)'}  | ${'#80331a80'}
    ${'rgba(50% 20% 10% / 50%)'}      | ${'#80331a80'}
    ${'rgba(50%,20%,10%/50%)'}        | ${'#80331a80'}
    ${'rgba(50%, 20%, 10% / 50%)'}    | ${'#80331a80'}
    ${'rgba(50% , 20% , 10% / 50%)'}  | ${'#80331a80'}
    ${'rgba(50% 20% 10% / 0.5)'}      | ${'#80331a80'}
    ${'rgba(50%, 20%, 10%, 100/2)'}   | ${'#80331a80'}
    ${'rgba(50%, 20%, 10%, 100 / 2)'} | ${'#80331a80'}
  `(`With "$arg" returns "$expected"`, ({ arg, expected }) => expect(rgbToHex(arg)).toBe(expected))
})

describe('rgbToHsl with invalid cases', () => {
  test.each`
    arg          | expected
    ${null}      | ${'hsl(0, 0%, 100%)'}
    ${false}     | ${'hsl(0, 0%, 100%)'}
    ${undefined} | ${'hsl(0, 0%, 100%)'}
    ${'string'}  | ${'hsl(0, 0%, 100%)'}
    ${''}        | ${'hsl(0, 0%, 100%)'}
    ${12345}     | ${'hsl(0, 0%, 100%)'}
    ${-12345}    | ${'hsl(0, 0%, 100%)'}
    ${Infinity}  | ${'hsl(0, 0%, 100%)'}
    ${-Infinity} | ${'hsl(0, 0%, 100%)'}
    ${NaN}       | ${'hsl(0, 0%, 100%)'}
    ${{}}        | ${'hsl(0, 0%, 100%)'}
    ${[]}        | ${'hsl(0, 0%, 100%)'}
    ${'#ffffff'} | ${'hsl(0, 0%, 100%)'}
  `(`With "$arg" returns $expected`, ({ arg, expected }) => expect(rgbToHsl(arg)).toBe(expected))
})

describe('rgbToHsl with valid cases', () => {
  test.each`
    arg                               | expected
    ${'rgb(50 40 30)'}                | ${'hsl(30, 25%, 16%)'}
    ${'rgb(50,40,30)'}                | ${'hsl(30, 25%, 16%)'}
    ${'rgb(50, 40, 30)'}              | ${'hsl(30, 25%, 16%)'}
    ${'rgb(50 , 40 , 30)'}            | ${'hsl(30, 25%, 16%)'}
    ${'rgb(50% 40% 30%)'}             | ${'hsl(29, 25%, 40%)'}
    ${'rgb(50%,40%,30%)'}             | ${'hsl(29, 25%, 40%)'}
    ${'rgb(50%, 40%, 30%)'}           | ${'hsl(29, 25%, 40%)'}
    ${'rgb(50% , 40% , 30%)'}         | ${'hsl(29, 25%, 40%)'}
    ${'rgba(50% 20% 10% 0.5)'}        | ${'hsla(15, 66%, 30%, 80)'}
    ${'rgba(50%,20%,10%,0.5)'}        | ${'hsla(15, 66%, 30%, 80)'}
    ${'rgba(50%, 20%, 10%, 0.5)'}     | ${'hsla(15, 66%, 30%, 80)'}
    ${'rgba(50% , 20% , 10% , 0.5)'}  | ${'hsla(15, 66%, 30%, 80)'}
    ${'rgba(50% 20% 10% 50%)'}        | ${'hsla(15, 66%, 30%, 80)'}
    ${'rgba(50%,20%,10%,50%)'}        | ${'hsla(15, 66%, 30%, 80)'}
    ${'rgba(50%, 20%, 10%, 50%)'}     | ${'hsla(15, 66%, 30%, 80)'}
    ${'rgba(50% , 20% , 10% , 50%)'}  | ${'hsla(15, 66%, 30%, 80)'}
    ${'rgba(50% 20% 10% / 50%)'}      | ${'hsla(15, 66%, 30%, 80)'}
    ${'rgba(50%,20%,10%/50%)'}        | ${'hsla(15, 66%, 30%, 80)'}
    ${'rgba(50%, 20%, 10% / 50%)'}    | ${'hsla(15, 66%, 30%, 80)'}
    ${'rgba(50% , 20% , 10% / 50%)'}  | ${'hsla(15, 66%, 30%, 80)'}
    ${'rgba(50% 20% 10% / 0.5)'}      | ${'hsla(15, 66%, 30%, 80)'}
    ${'rgba(50%, 20%, 10%, 100/2)'}   | ${'hsla(15, 66%, 30%, 80)'}
    ${'rgba(50%, 20%, 10%, 100 / 2)'} | ${'hsla(15, 66%, 30%, 80)'}
  `(`With "$arg" returns $expected`, ({ arg, expected }) => expect(rgbToHsl(arg)).toBe(expected))
})
